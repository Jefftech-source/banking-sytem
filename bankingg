#include <stdio.h> 
#include <stdlib.h>
#include <assert.h>

// Debugging macro: Prints formatted debug information to stderr if DEBUG is defined.
#ifdef DEBUG
    #define DEBUG_PRINT(fmt, ...) fprintf(stderr, "DEBUG: " fmt "\n", __VA_ARGS__)
#else
    #define DEBUG_PRINT(fmt, ...) 
#endif

// Define a simple structure to represent a bank account.
typedef struct {
    int accountNumber;
    double balance;
} BankAccount;

// Function to display the banking system menu.
void displayMenu() {
    printf("=================================\n");
    printf("       Banking System Menu       \n");
    printf("=================================\n");
    printf("1. Check Balance\n");
    printf("2. Deposit\n");
    printf("3. Withdraw\n");
    printf("4. Exit\n");
    printf("=================================\n");
    printf("Enter your choice: ");
}

// Main function: Entry point of the application.
int main() {
    // Initialize a sample bank account.
    BankAccount account;
    account.accountNumber = 1001;
    account.balance = 1000.00;

    printf("Welcome! Your account number is: %d\n", account.accountNumber);
    printf("Your initial balance is: $%.2f\n\n", account.balance);

    int choice = 0;
    while (1) {
        displayMenu();

        // Validate the user input for menu choices.
        if (scanf("%d", &choice) != 1) {
            printf("Invalid input! Please enter a number for your choice.\n");
            while (getchar() != '\n'); // Clear the input buffer on error.
            continue;
        }
        
        // Process the selected menu option.
        switch (choice) {
            case 1:
                // Option 1: Display the current balance.
                printf("Your current balance is: $%.2f\n\n", account.balance);
                break;

            case 2: {
                // Option 2: Deposit funds.
                double depositAmount = 0;
                printf("Enter amount to deposit: ");
                if (scanf("%lf", &depositAmount) != 1) {
                    printf("Invalid amount entered. Please try again.\n\n");
                    while (getchar() != '\n'); // Clear erroneous input.
                    break;
                }
                // Error handling: Deposit amount must be positive.
                if (depositAmount <= 0) {
                    printf("Error: Deposit amount must be greater than zero.\n\n");
                    break;
                }
                account.balance += depositAmount;
                printf("Deposit successful. New balance: $%.2f\n\n", account.balance);
                DEBUG_PRINT("Deposited: $%.2f, Updated Balance: $%.2f", depositAmount, account.balance);
                break;
            }

            case 3: {
                // Option 3: Withdraw funds.
                double withdrawAmount = 0;
                printf("Enter amount to withdraw: ");
                if (scanf("%lf", &withdrawAmount) != 1) {
                    printf("Invalid amount entered. Please try again.\n\n");
                    while (getchar() != '\n'); // Clear erroneous input.
                    break;
                }
                // Error handling: Withdrawal amount must be positive.
                if (withdrawAmount <= 0) {
                    printf("Error: Withdrawal amount must be greater than zero.\n\n");
                    break;
                }
                // Error handling: Check for sufficient funds before withdrawal.
                if (withdrawAmount > account.balance) {
                    printf("Error: Insufficient funds. Your current balance is: $%.2f\n\n", account.balance);
                    DEBUG_PRINT("Attempted withdrawal: $%.2f with balance: $%.2f", withdrawAmount, account.balance);
                    break;
                }
                account.balance -= withdrawAmount;
                printf("Withdrawal successful. New balance: $%.2f\n\n", account.balance);
                DEBUG_PRINT("Withdrew: $%.2f, Updated Balance: $%.2f", withdrawAmount, account.balance);
                break;
            }

            case 4:
                // Option 4: Exit the program.
                printf("Thank you for using the banking system. Goodbye!\n");
                exit(0);

            default:
                // Handling an invalid menu choice.
                printf("Invalid choice! Please select a valid option.\n\n");
                break;
        }
    }
    return 0;
}
